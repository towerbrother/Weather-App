{"version":3,"sources":["components/Input.jsx","context/weatherContext.js","components/Checkboxes.jsx","components/Radio.jsx","components/Form.jsx","components/CurrentDisplay.jsx","components/ForecastDisplay.jsx","components/CityNameDisplay.jsx","components/Weather.jsx","components/Error.jsx","components/LoadingPage.jsx","components/CreatedBy.jsx","components/App.jsx","index.js"],"names":["Input","label","props","htmlFor","id","autoComplete","WeatherContext","React","createContext","Checkboxes","type","useContext","showCurrent","showForecast","handleBoxChecked","className","onChange","checked","Radio","unitMeasure","handleRadioChecked","name","value","Form","queryStringCity","queryStringCountry","handleChange","handleSubmit","onSubmit","placeholder","disabled","CurrentDisplay","iconId","dataCurrent","convertCelsius","temp","Math","round","convertFahrenheit","celsius","weather","icon","src","alt","main","temp_min","temp_max","description","ForecastDisplay","dataForecast","arrayForecast","list","filter","item","dt_txt","slice","map","key","dt","CityNameDisplay","sys","country","city","Weather","Error","err","status","statusText","LoadingPage","CreatedBy","href","target","rel","API","App","useState","setErr","loading","setLoading","setDataCurrent","setDataForecast","setUnitMeasure","setQueryStringCity","setQueryStringCountry","setShowCurrent","setShowForecast","Provider","e","preventDefault","fetch","window","location","protocol","then","res","ok","json","catch","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bc861126.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Input = ({ label, ...props }) => (\r\n  <div>\r\n    {label && <label htmlFor={props.id}>{label}</label>}\r\n    <input {...props} autoComplete=\"off\" />\r\n  </div>\r\n);\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\nconst WeatherContext = React.createContext();\r\n\r\nexport default WeatherContext;\r\n","import React, { useContext } from \"react\";\r\nimport Input from \"./Input\";\r\nimport WeatherContext from \"./../context/weatherContext\";\r\n\r\nconst Checkboxes = ({ type }) => {\r\n  const { showCurrent, showForecast, handleBoxChecked } = useContext(\r\n    WeatherContext\r\n  );\r\n  return (\r\n    <div className=\"checkbox\">\r\n      <Input\r\n        label=\"Current\"\r\n        id=\"showCurrent\"\r\n        className=\"current\"\r\n        type={type}\r\n        onChange={handleBoxChecked}\r\n        checked={showCurrent}\r\n      />\r\n      <Input\r\n        label=\"Forecast\"\r\n        id=\"showForecast\"\r\n        className=\"forecast\"\r\n        type={type}\r\n        onChange={handleBoxChecked}\r\n        checked={showForecast}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Checkboxes;\r\n","import React, { useContext } from \"react\";\r\nimport Input from \"./Input\";\r\nimport WeatherContext from \"./../context/weatherContext\";\r\n\r\nconst Radio = ({ type }) => {\r\n  const { unitMeasure, handleRadioChecked } = useContext(WeatherContext);\r\n\r\n  return (\r\n    <div className=\"radio\">\r\n      <Input\r\n        label=\"Metric\"\r\n        id=\"metric\"\r\n        name=\"unitMeasure\"\r\n        value=\"metric\"\r\n        type={type}\r\n        onChange={handleRadioChecked}\r\n        checked={unitMeasure === \"metric\"}\r\n      />\r\n      <Input\r\n        label=\"Imperial\"\r\n        id=\"imperial\"\r\n        name=\"unitMeasure\"\r\n        value=\"imperial\"\r\n        type={type}\r\n        onChange={handleRadioChecked}\r\n        checked={unitMeasure === \"imperial\"}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Radio;\r\n","import React, { useContext } from \"react\";\r\nimport Input from \"./Input\";\r\nimport Checkboxes from \"./Checkboxes\";\r\nimport Radio from \"./Radio\";\r\nimport WeatherContext from \"./../context/weatherContext\";\r\n\r\nconst Form = () => {\r\n  const {\r\n    queryStringCity,\r\n    queryStringCountry,\r\n    showCurrent,\r\n    showForecast,\r\n    handleChange,\r\n    handleSubmit,\r\n  } = useContext(WeatherContext);\r\n\r\n  return (\r\n    <div className=\"form\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"input-container\">\r\n          <Input\r\n            label=\"\"\r\n            id=\"city\"\r\n            type=\"text\"\r\n            name=\"queryStringCity\"\r\n            placeholder=\"City...\"\r\n            onChange={handleChange}\r\n            value={queryStringCity}\r\n          />\r\n          <Input\r\n            label=\"\"\r\n            id=\"country\"\r\n            type=\"text\"\r\n            name=\"queryStringCountry\"\r\n            placeholder=\"Country...\"\r\n            onChange={handleChange}\r\n            value={queryStringCountry}\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            className=\"button\"\r\n            disabled={!(showCurrent || showForecast) || !queryStringCity}\r\n          >\r\n            Weather\r\n          </button>\r\n        </div>\r\n        <div className=\"boxes-container\">\r\n          <Checkboxes type=\"checkbox\" />\r\n          <Radio type=\"radio\" />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React, { useContext } from \"react\";\r\nimport WeatherContext from \"./../context/weatherContext\";\r\n\r\nconst CurrentDisplay = () => {\r\n  const { dataCurrent, unitMeasure } = useContext(WeatherContext);\r\n\r\n  const displayWeatherIcon = (iconId) => {\r\n    return (\r\n      <img\r\n        id=\"icon\"\r\n        src={`http://openweathermap.org/img/wn/${iconId}@2x.png`}\r\n        alt=\"Weather icon\"\r\n      />\r\n    );\r\n  };\r\n\r\n  const convertCelsius = (temp) => Math.round((temp - 273.15) * 10) / 10;\r\n\r\n  const convertFahrenheit = (celsius) =>\r\n    Math.round((celsius * 1.8 + 32) * 10) / 10;\r\n\r\n  return (\r\n    <div className=\"current-weather\">\r\n      {displayWeatherIcon(dataCurrent.weather[0].icon)}\r\n      {unitMeasure === \"metric\" ? (\r\n        <>\r\n          <p className=\"current-temp\">\r\n            {convertCelsius(dataCurrent.main.temp)}&deg;C\r\n          </p>\r\n          <span className=\"current-min-temp\">\r\n            min: {convertCelsius(dataCurrent.main.temp_min)}&deg;C\r\n          </span>\r\n          <span className=\"current-max-temp\">\r\n            max: {convertCelsius(dataCurrent.main.temp_max)}&deg;C\r\n          </span>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <p className=\"current-temp\">\r\n            {convertFahrenheit(convertCelsius(dataCurrent.main.temp))}&deg;F\r\n          </p>\r\n          <span className=\"current-min-temp\">\r\n            min: {convertFahrenheit(convertCelsius(dataCurrent.main.temp_min))}\r\n            &deg;F\r\n          </span>\r\n          <span className=\"current-max-temp\">\r\n            max: {convertFahrenheit(convertCelsius(dataCurrent.main.temp_max))}\r\n            &deg;F\r\n          </span>\r\n        </>\r\n      )}\r\n      <h4 className=\"current-description\">\r\n        {dataCurrent.weather[0].description}\r\n      </h4>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrentDisplay;\r\n","import React, { useContext } from \"react\";\r\nimport WeatherContext from \"./../context/weatherContext\";\r\n\r\nconst ForecastDisplay = () => {\r\n  const { dataForecast, unitMeasure } = useContext(WeatherContext);\r\n\r\n  const displayWeatherIcon = (iconId) => {\r\n    return (\r\n      <img\r\n        id=\"icon\"\r\n        src={`http://openweathermap.org/img/wn/${iconId}@2x.png`}\r\n        alt=\"Weather icon\"\r\n      />\r\n    );\r\n  };\r\n\r\n  const convertCelsius = (temp) => Math.round((temp - 273.15) * 10) / 10;\r\n\r\n  const convertFahrenheit = (celsius) =>\r\n    Math.round((celsius * 1.8 + 32) * 10) / 10;\r\n\r\n  const arrayForecast = dataForecast.list.filter(\r\n    (item) =>\r\n      item.dt_txt.slice(11, 19) === dataForecast.list[39].dt_txt.slice(11, 19)\r\n  );\r\n\r\n  return (\r\n    <div className=\"forecast\">\r\n      <div className=\"forecast-container\">\r\n        {arrayForecast.map((item) => (\r\n          <div key={item.dt} className=\"forecast-item\">\r\n            <p className=\"forecast-date\">{item.dt_txt.slice(0, 10)}</p>\r\n            {displayWeatherIcon(item.weather[0].icon)}\r\n            {unitMeasure === \"metric\" ? (\r\n              <p className=\"forecast-temp\">\r\n                {convertCelsius(item.main.temp)}&deg;C\r\n              </p>\r\n            ) : (\r\n              <p className=\"forecast-temp\">\r\n                {convertFahrenheit(convertCelsius(item.main.temp))}&deg;F\r\n              </p>\r\n            )}\r\n            <p className=\"forecast-description\">\r\n              {item.weather[0].description}\r\n            </p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForecastDisplay;\r\n","import React, { useContext } from \"react\";\r\nimport WeatherContext from \"./../context/weatherContext\";\r\n\r\nconst CityNameDisplay = () => {\r\n  const { dataCurrent, dataForecast } = useContext(WeatherContext);\r\n\r\n  return dataCurrent ? (\r\n    <h1 className=\"current-title\">\r\n      {dataCurrent.name}, {dataCurrent.sys.country}\r\n    </h1>\r\n  ) : (\r\n    <h1 className=\"forecast-title\">\r\n      {dataForecast.city.name}, {dataForecast.city.country}\r\n    </h1>\r\n  );\r\n};\r\n\r\nexport default CityNameDisplay;\r\n","import React, { useContext } from \"react\";\r\nimport CurrentDisplay from \"./CurrentDisplay\";\r\nimport ForecastDisplay from \"./ForecastDisplay\";\r\nimport CityNameDisplay from \"./CityNameDisplay\";\r\nimport WeatherContext from \"./../context/weatherContext\";\r\n\r\nconst Weather = () => {\r\n  const { dataCurrent, dataForecast } = useContext(WeatherContext);\r\n\r\n  return (\r\n    <div>\r\n      <CityNameDisplay />\r\n      {dataCurrent && dataForecast ? (\r\n        <div>\r\n          <CurrentDisplay />\r\n          <ForecastDisplay />\r\n        </div>\r\n      ) : dataCurrent && !dataForecast ? (\r\n        <CurrentDisplay />\r\n      ) : (\r\n        <ForecastDisplay />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Weather;\r\n","import React from \"react\";\r\n\r\nconst Error = ({ err }) => (\r\n  <div className=\"error\">\r\n    <p>{`${err.status} - ${err.statusText}`}</p>\r\n    {err.status === 404 ? (\r\n      <p>Not valid input</p>\r\n    ) : err.status === 401 ? (\r\n      <p>Not valid API key</p>\r\n    ) : (\r\n      <p>Too many API calls. Try again later.</p>\r\n    )}\r\n  </div>\r\n);\r\n\r\nexport default Error;\r\n","import React from \"react\";\r\n\r\nconst LoadingPage = () => {\r\n  return (\r\n    <div className=\"loader\">\r\n      <img alt=\"loader gif\" className=\"loader-image\" src=\"/loader.gif\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingPage;\r\n","import React from \"react\";\r\n\r\nconst CreatedBy = () => (\r\n  <div className=\"container\">\r\n    <h5 className=\"createdBy__text\">\r\n      Created by{\" \"}\r\n      <a\r\n        className=\"createdBy__link\"\r\n        href=\"\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        Giorgio Torre\r\n      </a>\r\n    </h5>\r\n  </div>\r\n);\r\n\r\nexport default CreatedBy;\r\n","import React, { useState } from \"react\";\r\nimport Form from \"./Form\";\r\nimport Weather from \"./Weather\";\r\nimport Error from \"./Error\";\r\nimport LoadingPage from \"./LoadingPage\";\r\nimport WeatherContext from \"./../context/weatherContext\";\r\nimport CreatedBy from \"./CreatedBy\";\r\n\r\nconst API = \"f9b82988a14039290e02b95f5e395184\";\r\n\r\nconst App = () => {\r\n  const [err, setErr] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [dataCurrent, setDataCurrent] = useState(null);\r\n  const [dataForecast, setDataForecast] = useState(null);\r\n  const [unitMeasure, setUnitMeasure] = useState(\"metric\");\r\n  const [queryStringCity, setQueryStringCity] = useState(\"\");\r\n  const [queryStringCountry, setQueryStringCountry] = useState(\"\");\r\n  const [showCurrent, setShowCurrent] = useState(true);\r\n  const [showForecast, setShowForecast] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    setQueryStringCountry(\"\");\r\n    const name = e.target.name;\r\n    if (name === \"queryStringCity\") setQueryStringCity(e.target.value);\r\n    if (name === \"queryStringCountry\") setQueryStringCountry(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErr(null);\r\n    setDataCurrent(null);\r\n    setDataForecast(null);\r\n    setLoading(showCurrent + showForecast);\r\n\r\n    if (showCurrent) {\r\n      fetch(\r\n        `${window.location.protocol}//api.openweathermap.org/data/2.5/weather?q=${queryStringCity},${queryStringCountry}&APPID=${API}`\r\n      )\r\n        .then((res) => {\r\n          if (!res.ok) throw res;\r\n          return res.json();\r\n        })\r\n        .then((dataCurrent) => {\r\n          setDataCurrent(dataCurrent);\r\n          setLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          setErr(err);\r\n          setLoading(loading - 1);\r\n        });\r\n    }\r\n\r\n    if (showForecast) {\r\n      fetch(\r\n        `${window.location.protocol}//api.openweathermap.org/data/2.5/forecast?q=${queryStringCity},${queryStringCountry}&APPID=${API}`\r\n      )\r\n        .then((res) => {\r\n          if (!res.ok) throw res;\r\n          return res.json();\r\n        })\r\n        .then((dataForecast) => {\r\n          setDataForecast(dataForecast);\r\n          setLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          setErr(err);\r\n          setLoading(loading - 1);\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleBoxChecked = (e) => {\r\n    const id = e.target.id;\r\n    if (id === \"showCurrent\") setShowCurrent(!showCurrent);\r\n    if (id === \"showForecast\") setShowForecast(!showForecast);\r\n  };\r\n\r\n  const handleRadioChecked = (e) => {\r\n    setUnitMeasure(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <WeatherContext.Provider\r\n      value={{\r\n        dataCurrent,\r\n        dataForecast,\r\n        queryStringCity,\r\n        queryStringCountry,\r\n        showCurrent,\r\n        showForecast,\r\n        unitMeasure,\r\n        handleChange,\r\n        handleSubmit,\r\n        handleBoxChecked,\r\n        handleRadioChecked,\r\n      }}\r\n    >\r\n      <div className=\"App\">\r\n        <div className=\"content-container\">\r\n          <Form />\r\n          {err && <Error err={err} />}\r\n          {loading ? (\r\n            <LoadingPage />\r\n          ) : (\r\n            (dataCurrent || dataForecast) && <Weather />\r\n          )}\r\n        </div>\r\n        <CreatedBy />\r\n      </div>\r\n    </WeatherContext.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"normalize.css/normalize.css\";\nimport \"./styles/styles.scss\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}